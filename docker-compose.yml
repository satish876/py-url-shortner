services:
  api-gateway:
    image: nginx:latest
    container_name: api-gateway
    volumes:
      - ./api-gateway/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "8080:80"
    depends_on:
      - read-service
      - write-service

  read-service:
    build: ./read-service
    container_name: read-service
    ports:
      - "5001:5001"
    depends_on:
      - redis
      - db

  write-service:
    build: ./write-service
    container_name: write-service
    ports:
      - "5002:5002"
    depends_on:
      - redis
      - db
      - kafka

  db:
    image: mysql:8
    container_name: db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: url_shortener
      MYSQL_USER: admin
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    volumes:
      - db-data:/var/lib/mysql
    command: --max_connections=200

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
  
  kafka:
    image: 'bitnami/kafka:latest'
    hostname: kafka
    ports:
      - '9092:9092'
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    hostname: zookeeper
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

volumes:
  db-data:
